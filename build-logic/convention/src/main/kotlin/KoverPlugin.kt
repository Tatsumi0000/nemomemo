import kotlinx.kover.gradle.plugin.dsl.KoverProjectExtension
import org.gradle.api.Plugin
import org.gradle.api.Project

class KoverPlugin: Plugin<Project> {
    override fun apply(target: Project) {
        val koverPlugin = "org.jetbrains.kotlinx.kover"
        with(target) {
            pluginManager.apply(koverPlugin)

            rootProject.subprojects {
                if (this@subprojects.name == target.name) return@subprojects
                this@subprojects.beforeEvaluate { // wrap with beforeEvaluate
                    this@subprojects.pluginManager.apply(koverPlugin)
                }
                target.dependencies.add("kover", this@subprojects)
            }

            extensions.configure<KoverProjectExtension>("kover") {
                reports {
                    
                    filters {
                        excludes {
                            classes(
                                // classes generated by Hilt
                                "Hilt_*",
                                "*_Factory",
                                "*_HiltModules*",
                                "*Module_Provide*Factory",
                                // compose previews
                                "*Preview*Kt",
                            )
                        }
                    }

                }
            }
        }
    }

}